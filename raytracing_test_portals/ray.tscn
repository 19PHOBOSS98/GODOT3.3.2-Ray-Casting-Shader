[gd_scene load_steps=90 format=2]

[ext_resource path="res://Jim.gd" type="Script" id=1]
[ext_resource path="res://ray_tracing_portals.shader" type="Shader" id=2]
[ext_resource path="res://p1.gd" type="Script" id=3]
[ext_resource path="res://cape_hill_4k.exr" type="Texture" id=4]
[ext_resource path="res://update_view.gd" type="Script" id=5]
[ext_resource path="res://D_light.gd" type="Script" id=6]
[ext_resource path="res://sphere2.gd" type="Script" id=7]
[ext_resource path="res://sphere4.gd" type="Script" id=8]
[ext_resource path="res://sphere5.gd" type="Script" id=9]
[ext_resource path="res://ray.gd" type="Script" id=10]
[ext_resource path="res://sphere8.gd" type="Script" id=11]
[ext_resource path="res://sphere7.gd" type="Script" id=12]
[ext_resource path="res://kenney_fontpackage/Fonts/Kenney Blocks.ttf" type="DynamicFontData" id=13]
[ext_resource path="res://addons/Recorder/recorder.gd" type="Script" id=14]
[ext_resource path="res://PortalA.gd" type="Script" id=15]
[ext_resource path="res://sphere11.gd" type="Script" id=16]
[ext_resource path="res://FXAA.tscn" type="PackedScene" id=17]
[ext_resource path="res://PortalB.gd" type="Script" id=18]
[ext_resource path="res://sphere12.gd" type="Script" id=19]
[ext_resource path="res://sphere13.gd" type="Script" id=20]
[ext_resource path="res://Portal2B.gd" type="Script" id=21]
[ext_resource path="res://Portal2A.gd" type="Script" id=22]
[ext_resource path="res://PortalB3.gd" type="Script" id=23]
[ext_resource path="res://Portal4A.gd" type="Script" id=24]
[ext_resource path="res://PortalA3.gd" type="Script" id=25]
[ext_resource path="res://Portal4B.gd" type="Script" id=26]
[ext_resource path="res://PortalA7.gd" type="Script" id=27]
[ext_resource path="res://PortalB7.gd" type="Script" id=28]
[ext_resource path="res://Portal8B.gd" type="Script" id=29]
[ext_resource path="res://Portal8A.gd" type="Script" id=30]

[sub_resource type="SpatialMaterial" id=1]
albedo_color = Color( 0.94902, 0.0509804, 0.0509804, 1 )

[sub_resource type="PrismMesh" id=2]
material = SubResource( 1 )
size = Vector3( 1, 4, 1 )

[sub_resource type="DynamicFont" id=3]
size = 30
outline_size = 2
font_data = ExtResource( 13 )

[sub_resource type="SphereShape" id=4]

[sub_resource type="SphereMesh" id=5]

[sub_resource type="SpatialMaterial" id=6]
uv1_scale = Vector3( -1, 1, 1 )

[sub_resource type="SphereShape" id=7]
radius = 3.0

[sub_resource type="SphereMesh" id=8]
radius = 3.0
height = 6.0

[sub_resource type="SphereShape" id=9]
radius = 5.0

[sub_resource type="SphereMesh" id=10]
radius = 5.0
height = 10.0

[sub_resource type="SphereMesh" id=11]
radius = 5.0
height = 10.0

[sub_resource type="SphereShape" id=12]
radius = 10.0

[sub_resource type="SphereMesh" id=13]
radius = 10.0
height = 20.0

[sub_resource type="SphereShape" id=14]
radius = 10.0

[sub_resource type="SphereMesh" id=15]
radius = 10.0
height = 20.0

[sub_resource type="SphereMesh" id=16]
radius = 5.0
height = 10.0

[sub_resource type="BoxShape" id=17]
extents = Vector3( 1000, 1, 1000 )

[sub_resource type="CubeMesh" id=18]
size = Vector3( 2000, 2, 2000 )

[sub_resource type="PanoramaSky" id=19]
panorama = ExtResource( 4 )

[sub_resource type="Environment" id=20]
background_mode = 2
background_sky = SubResource( 19 )
background_energy = 6.25
ambient_light_color = Color( 1, 1, 1, 1 )
ambient_light_sky_contribution = 0.33

[sub_resource type="GDScript" id=21]
script/source = "
extends KinematicBody

####### BASIC MOVEMENT #######
export var SPEED=50
export var ASTRALSPEED=100
export var inertia = 0
const Acceleration=3
var cam = 0
var mouse_sensitivity = -0.25
var velocity=Vector3()
var direction = Vector3()
onready var cursor_y = $Head.transform.basis.y



####### TELEPORTATION & ASTRAL_PROJECTION #######
var astral_project = false

####### GRAVITATIONAL ORIENTATION #######
var mass = 20
onready var g = global_transform.basis.y*-1#Vector3(0,-1,0)
onready var rays = $RayCast
onready var feet = $Head/RayCast2
onready var on_ground = $On_ground
var prev_g = Vector3(0,-1,0)
var lock_grab = true
var reorienting = false
var time = 1
var free = false
var reset = false
var snap = false

onready var center = $CENTER	#Area node for detecting custom shaped gravity field \"collision shape\"
onready var check_axis = $CENTER/CollisionShape.get_children()


var proximal_portals = 0 setget set_proximal_portals, get_proximal_portals

func set_proximal_portals(val):
	if(val<0):
		val = 0
	proximal_portals = val

func get_proximal_portals():
	return proximal_portals

#func is_near_more_portals():
#	return self.proximal_portals > 1


func _ready():
	add_to_group(\"Players\")
	for cast in check_axis:
		cast.enabled = false
	#print(check_axis[0].name)

	get_tree().call_group(\"SCREENS\",\"update_view\",$Head/PCamera.global_transform)


func _physics_process(delta):
	#$V.text = String(velocity)
	if(velocity.length()>0):
		get_tree().call_group(\"SCREENS\",\"update_view\",$Head/PCamera.global_transform)
	
#	prints(get_collision_mask_bit(0),get_collision_mask_bit(10),proximal_portals)
	#prints(self.global_transform.origin)
	var gravity_down = g/g.length()



####### BASIC MOVEMENT #######
	if on_ground.is_colliding():
		snap = true
	direction = Vector3(0,0,0)
	var aim = $Head/PCamera.get_global_transform().basis
	if Input.is_action_pressed(\"ui_up\"):
		direction -= aim.z
	if Input.is_action_pressed(\"ui_down\"):
		direction += aim.z
	if Input.is_action_pressed(\"ui_left\"):
		direction -= aim.x
	if Input.is_action_pressed(\"ui_right\"):
		direction += aim.x
	if Input.is_action_pressed(\"ascend\"):
		if (!astral_project && gravity_down != Vector3(0,0,0)):########## 
			direction -= gravity_down
		else:
			direction.y += 1
		snap = false
	if Input.is_action_pressed(\"descend\"):
		if (!astral_project && gravity_down != Vector3(0,0,0)):##########
			direction += gravity_down##########
		else:
			direction.y -=1



####### TELEPORTATION & ASTRAL_PROJECTION #######
	if Input.is_action_just_pressed(\"t\"):		#Astral Project, teleport with 'V'
		astral_project=true
		lock_grab = false
	if Input.is_action_just_pressed(\"f\"):		#cancels Astral Projection mode
		astral_project=false
		lock_grab = true
	if Input.is_action_just_pressed(\"v\"):	#teleport to pointer
		self.transform.origin=$Head/PCamera/P.global_transform.origin
		astral_project=false



####### GRAVITATIONAL ORIENTATION #######
	if Input.is_action_just_pressed(\"r\"): #Reorients player to world axis
		reorienting = true
	if Input.is_action_pressed(\"z\"): #Reorients player to the left
		pass
	if Input.is_action_pressed(\"c\"): #Reorients player to the right
		pass


	\"\"\"
####### PORTAL INTERACTION #######
### waiting for Godot 4 for optimization ###
	if Input.is_action_just_pressed(\"B\"):		#freezes portal cameras inplace
		if($Head/PCamera.debug == true):
			$Head/PCamera.debug = false
			#print(\"Debug false\")
		elif($Head/PCamera.debug == false):
			$Head/PCamera.debug = true
			#print(\"Debug true\")
	\"\"\"


	direction.normalized()
	var target
	if !astral_project:
		target = direction*SPEED
	else:
		target = direction*ASTRALSPEED
	velocity = velocity.linear_interpolate(target,Acceleration*delta)



	if(prev_g != g):	#lets grab function only run when gravitational reorientation is needed
		lock_grab = false #basically stops 'grabed' function from running every physics process call

	if !astral_project:
		if(reorienting):
			grabed(Vector3(0,-1,0))
		else:
			if(!lock_grab):
				grabed(gravity_down)
		if !reset:
			reset = true
			$Head.transform.basis=$Head.global_transform.basis
			cursor_y = $Head.transform.basis.y
		var snap_vector = gravity_down if snap else Vector3()
		#prints(snap,snap_vector)
		if(proximal_portals>0):
			snap_vector = Vector3(0,0,0)
			gravity_down = Vector3(0,0,0)
		velocity = self.move_and_slide_with_snap(velocity,snap_vector,-gravity_down,false,4,0.785398,false)#snap_vector
		$Head/PCamera/P.transform.origin = Vector3(0,0,-10)
		$Head.transform.origin=Vector3(0,0,0)
	else:
		if reset:
			reset=false
		if(!lock_grab):
			re_head()
		cursor_y = $Head.transform.basis.y
		velocity = $Head.move_and_slide_with_snap(velocity,Vector3(0,0,0),Vector3(0,0,0),false,4,0.785398,false)#snap_vector #move_and_slide(velocity,Vector3(0,0,0),false,4,0.785398,false)
#
	for indx in get_slide_count():
		var collision = get_slide_collision(indx)
		#if(collision.collider.is_in_group(\"bodies\")):
		#print(\"class: \" + collision.collider.get_class())
		#prints(\"is RB class: \" , collision.collider.is_class(\"RigidBody\"))
		if(collision.collider.is_class(\"RigidBody\")):
			collision.collider.set(\"sleeping\",false)
			collision.collider.apply_central_impulse(-collision.normal*inertia)
	

####### PORTAL INTERACTION #######
#	if(abs(velocity.z)!=0):					#this triggers your player's camera
#		$Head/PCamera.start_update()			#needs Head/PCamera gd script (temporarily disabled)



func re_head():
	var new_xform = $Head.global_transform
	new_xform.basis.y = Vector3(0,1,0)
	new_xform.basis.x = new_xform.basis.y.cross(new_xform.basis.z)########## aligning the x
	new_xform.basis = new_xform.basis.orthonormalized()
	$Head.global_transform = $Head.global_transform.interpolate_with(new_xform,0.05)
	re($Head,new_xform)



func grabed(gravity_down):
	var new_xform = global_transform
	new_xform.basis.y = -gravity_down
	new_xform.basis.x = -gravity_down.cross(new_xform.basis.z)
	new_xform.basis = new_xform.basis.orthonormalized()
	re(self,new_xform)



func re(body,to):
	body.global_transform = body.global_transform.interpolate_with(to,0.05)
	if(reorienting):
		reorienting = false
		g = Vector3(0,-1,0)



func _input(event):
	if (event is InputEventMouseMotion):
		#$Head/PCamera.start_update() # UPDATES PORTAL CAMERAS, #needs Head/PCamera gd script (temporarily disabled)
		$Head.rotate(cursor_y,deg2rad(event.relative.x * mouse_sensitivity))
		var change = event.relative.y * mouse_sensitivity
		if ((change + cam <90) && (change + cam >-90)):
			get_tree().call_group(\"SCREENS\",\"update_view\",$Head/PCamera.global_transform)
			$Head/PCamera.rotate_x(deg2rad(change))
			cam += change

\"\"\"
### Used for Iregularly shaped custom gravity Fields refer to YT Video ###
### Scheduled for deprecation, use better system than Raycasting ###
func is_inside(atmosphere,x): #checks if player is inside a custom gravity field
	if(x > 5): #if all check axis raycasts return the same reading(atmosphere) then player really is inside
		return true
	if(!check_axis[x].get_collider()): #if one of them returns null the player is outside atmosphere
		return false
	if(check_axis[x].get_collider() == atmosphere): #this recursively moves on to the next raycast if the first detected the atmosphere
		return(is_inside(atmosphere,x+1))
	else:	#if a ray does collide with something(another atmosphere) then it temporarily shuts of the collider's collision layer to check what's behind it
		var entity = check_axis[x].get_collider()
		entity.set_collision_layer_bit(19,false)
		check_axis[x].force_raycast_update()
		
		if(!check_axis[x].get_collider()): #if nothing is behind it then this sets the things layer back to the way it was and returning false
			#prints(entity.name,\"was disabled,\",check_axis[x].get_collider(),\"is behind it\")
			entity.set_collision_layer_bit(19,true)
			return false
		else:#if there's something else behind it, this recursively checks if it's the trigger atmosphere or something else
			if(is_inside(atmosphere,x)):	# if it hits the atmosphere we're looking for this sets every layer bit back and return true
				#prints(entity.name,\"is disabled,\",check_axis[x].get_collider().name,\"is behind it\")
				entity.set_collision_layer_bit(19,true)
				return true


###these two interact with concave colision shapes used as gravity fields using the player's area trigger: 'CENTER'
#since 
var contact_point = null
var current_planetary_atmosphere = null
func _on_CENTER_body_entered(body):
	if(body.is_in_group(\"Gravity Field\")):
		current_planetary_atmosphere = body
		contact_point = self.global_transform.origin
		#prints(\"contact point is\",contact_point)
		for cast in check_axis:
			cast.enabled = true
			cast.force_raycast_update()



func _on_CENTER_body_exited(body):
	if(body.is_in_group(\"Gravity Field\")):
		if(is_inside(body,0)):
			#prints(self.name,\"is inside:\",body.name)
			body.entering_atmosphere(self,contact_point)
		else:
			#prints(self.name,\"is outside:\",body.name)
			body.exiting_atmosphere(self)
			current_planetary_atmosphere = null
		for cast in check_axis:
			cast.enabled = false
\"\"\"
	
	
	
	
	
"

[sub_resource type="CapsuleMesh" id=22]
mid_height = 2.0

[sub_resource type="SpatialMaterial" id=23]
albedo_color = Color( 0, 0, 0, 1 )
emission_enabled = true
emission = Color( 1, 0.721569, 0, 1 )
emission_energy = 1.0
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="CapsuleShape" id=24]
height = 2.0

[sub_resource type="SphereShape" id=25]

[sub_resource type="SphereMesh" id=26]
radius = 0.25
height = 0.5

[sub_resource type="QuadMesh" id=27]
size = Vector2( 10, 10 )

[sub_resource type="ShaderMaterial" id=28]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/active = true
shader_param/shadow = true
shader_param/sun = false
shader_param/d_light_energy = 1.0
shader_param/d_light_dir = Vector3( 0, 0.258954, 0.96589 )
shader_param/mat = 3
shader_param/light_color = Color( 1, 1, 1, 1 )
shader_param/light_coordinates = null
shader_param/sky_energy = 0.324
shader_param/camera_basis = Basis( 1, 0, 0, 0, 1, 0, 0, 0, 1 )
shader_param/camera_global_position = Vector3( 0.667767, 0, -5.20231 )
shader_param/sphere_o = Vector3( 0, 0, 0 )
shader_param/sphere_o1 = Vector3( 0, 0, 0 )
shader_param/sphere_o2 = Vector3( 0, 0, 0 )
shader_param/sphere_o3 = Vector3( 0, 0, 0 )
shader_param/sphere_o4 = Vector3( 0, 0, 0 )
shader_param/sphere_o5 = Vector3( 0, 0, 0 )
shader_param/sphere_o7 = Vector3( 0, 0, 0 )
shader_param/sphere_o8 = Vector3( 0, 0, 0 )
shader_param/sphere_o9 = Vector3( 0, 0, 0 )
shader_param/sphere_o10 = Vector3( 0, 0, 0 )
shader_param/portal1An = null
shader_param/portal1Ao = Vector3( 0, 0, 10 )
shader_param/portal1A_dimension = Vector2( 4, 4 )
shader_param/portal1AT4_inv = null
shader_param/portal1AT3_inv = null
shader_param/portal1Bn = null
shader_param/portal1BT4 = null
shader_param/portal1BT3 = null
shader_param/portal2An = null
shader_param/portal2Ao = null
shader_param/portal2A_dimension = Vector2( 4, 4 )
shader_param/portal2AT4_inv = null
shader_param/portal2AT3_inv = null
shader_param/portal2Bn = null
shader_param/portal2BT4 = null
shader_param/portal2BT3 = null
shader_param/portal3An = null
shader_param/portal3Ao = null
shader_param/portal3A_dimension = Vector2( 4, 4 )
shader_param/portal3AT4_inv = null
shader_param/portal3AT3_inv = null
shader_param/portal3Bn = null
shader_param/portal3BT4 = null
shader_param/portal3BT3 = null
shader_param/portal4An = null
shader_param/portal4Ao = null
shader_param/portal4A_dimension = Vector2( 4, 4 )
shader_param/portal4AT4_inv = null
shader_param/portal4AT3_inv = null
shader_param/portal4Bn = null
shader_param/portal4BT4 = null
shader_param/portal4BT3 = null
shader_param/p1n = Vector3( 0.578881, -0.406075, -0.707107 )
shader_param/p1T_inv = Basis( 0.574277, 0.578881, -0.578881, 0.818661, -0.406075, 0.406075, 0, -0.707107, -0.707107 )
shader_param/p1o = Vector3( 10, 10, 10 )
shader_param/p1ox = null
shader_param/plane_dimension = Vector2( 4, 4 )
shader_param/texture_here = ExtResource( 4 )

[sub_resource type="CapsuleShape" id=29]
height = 2.0

[sub_resource type="PlaneMesh" id=30]
size = Vector2( 20, 20 )

[sub_resource type="SpatialMaterial" id=31]
albedo_color = Color( 1, 0, 0, 1 )

[sub_resource type="PlaneMesh" id=32]
material = SubResource( 31 )
size = Vector2( 50, 50 )

[sub_resource type="SpatialMaterial" id=33]
albedo_color = Color( 0, 0, 1, 1 )

[sub_resource type="PlaneMesh" id=34]
material = SubResource( 33 )

[sub_resource type="SpatialMaterial" id=35]
albedo_color = Color( 1, 0, 0, 1 )

[sub_resource type="PlaneMesh" id=36]
material = SubResource( 35 )

[sub_resource type="SpatialMaterial" id=37]
albedo_color = Color( 0, 0, 1, 1 )

[sub_resource type="PlaneMesh" id=38]
material = SubResource( 37 )
size = Vector2( 50, 50 )

[sub_resource type="SphereShape" id=39]
radius = 5.0

[sub_resource type="SphereMesh" id=40]
radius = 2.0
height = 4.0

[sub_resource type="SphereMesh" id=41]
radius = 5.0
height = 10.0

[sub_resource type="SphereShape" id=42]
radius = 7.0

[sub_resource type="SphereMesh" id=43]
radius = 7.0
height = 14.0

[sub_resource type="SpatialMaterial" id=44]
albedo_color = Color( 0, 1, 0, 1 )

[sub_resource type="PlaneMesh" id=45]
material = SubResource( 44 )
size = Vector2( 70, 30 )

[sub_resource type="SpatialMaterial" id=46]
albedo_color = Color( 0, 1, 1, 1 )

[sub_resource type="PlaneMesh" id=47]
material = SubResource( 46 )

[sub_resource type="SpatialMaterial" id=48]
albedo_color = Color( 0, 1, 0, 1 )

[sub_resource type="PlaneMesh" id=49]
material = SubResource( 48 )

[sub_resource type="SpatialMaterial" id=50]
albedo_color = Color( 0, 1, 1, 1 )

[sub_resource type="PlaneMesh" id=51]
material = SubResource( 50 )
size = Vector2( 70, 30 )

[sub_resource type="SpatialMaterial" id=52]
albedo_color = Color( 0.482353, 0, 1, 1 )

[sub_resource type="PlaneMesh" id=53]
material = SubResource( 52 )
size = Vector2( 40, 20 )

[sub_resource type="SpatialMaterial" id=54]
albedo_color = Color( 1, 0.470588, 0, 1 )

[sub_resource type="PlaneMesh" id=55]
material = SubResource( 54 )

[sub_resource type="SpatialMaterial" id=56]
albedo_color = Color( 0.482353, 0, 1, 1 )

[sub_resource type="PlaneMesh" id=57]
material = SubResource( 56 )

[sub_resource type="SpatialMaterial" id=58]
albedo_color = Color( 1, 0.470588, 0, 1 )

[sub_resource type="PlaneMesh" id=59]
material = SubResource( 58 )
size = Vector2( 40, 20 )

[node name="Spatial" type="Spatial"]
script = ExtResource( 10 )

[node name="FXAA" parent="." instance=ExtResource( 17 )]

[node name="D_light" type="Position3D" parent="."]
transform = Transform( 1, 0, 0, 0, 0.96589, 0.258954, 0, -0.258954, 0.96589, 0, 0, -71.1896 )
script = ExtResource( 6 )

[node name="MeshInstance" type="MeshInstance" parent="D_light"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0 )
visible = false
mesh = SubResource( 2 )
material/0 = null

[node name="Recorder" type="ReferenceRect" parent="."]
margin_right = 1024.0
margin_bottom = 600.0
script = ExtResource( 14 )
__meta__ = {
"_edit_use_anchors_": false
}
frames_per_second = 60.0
output_folder = "/Users/PH0B0SS/Desktop/frames"
use_thread = true

[node name="controls" type="Label" parent="."]
visible = false
margin_left = 1.99051
margin_top = 48.4687
margin_right = 198.991
margin_bottom = 130.469
text = "enable shadows: 3
light lateral position: 4&5
light longitudinal position: 1&2
light Intensity: 7&8
Swap Matterail: 0"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="FPS" type="Label" parent="."]
visible = false
margin_left = 644.764
margin_top = 3.67178
margin_right = 1021.76
margin_bottom = 71.6718
size_flags_horizontal = 7
custom_fonts/font = SubResource( 3 )
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
text = "FPS"
align = 2
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "not sure if I can trust this"
}

[node name="sphere1" type="StaticBody" parent="."]

[node name="CollisionShape" type="CollisionShape" parent="sphere1"]
shape = SubResource( 4 )
disabled = true

[node name="mesh" type="MeshInstance" parent="sphere1"]
visible = false
mesh = SubResource( 5 )
material/0 = SubResource( 6 )

[node name="Stationary blue black" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -5, -5.5, 10 )

[node name="CollisionShape" type="CollisionShape" parent="Stationary blue black"]
shape = SubResource( 7 )
disabled = true

[node name="mesh" type="MeshInstance" parent="Stationary blue black"]
visible = false
mesh = SubResource( 8 )
material/0 = null

[node name="cyan" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 23.7046, 31.9057, -12.6263 )
script = ExtResource( 9 )

[node name="CollisionShape" type="CollisionShape" parent="cyan"]
shape = SubResource( 9 )

[node name="mesh" type="MeshInstance" parent="cyan"]
visible = false
mesh = SubResource( 10 )
material/0 = null

[node name="blue" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 36.4662, 53.4392, 46.9641 )
script = ExtResource( 11 )

[node name="CollisionShape" type="CollisionShape" parent="blue"]
shape = SubResource( 9 )

[node name="mesh" type="MeshInstance" parent="blue"]
visible = false
mesh = SubResource( 11 )
material/0 = null

[node name="emerald" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.730713, 0, -8.36033 )
script = ExtResource( 19 )

[node name="CollisionShape" type="CollisionShape" parent="emerald"]
shape = SubResource( 12 )

[node name="mesh" type="MeshInstance" parent="emerald"]
visible = false
mesh = SubResource( 13 )
material/0 = null

[node name="Violet" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.57202, 0, 50.3376 )
script = ExtResource( 20 )

[node name="CollisionShape" type="CollisionShape" parent="Violet"]
shape = SubResource( 14 )

[node name="mesh" type="MeshInstance" parent="Violet"]
visible = false
mesh = SubResource( 15 )
material/0 = null

[node name="Gold" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.32842, 0, 30.3304 )
script = ExtResource( 7 )

[node name="CollisionShape" type="CollisionShape" parent="Gold"]
shape = SubResource( 9 )

[node name="mesh" type="MeshInstance" parent="Gold"]
visible = false
mesh = SubResource( 16 )
material/0 = null

[node name="floor" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -11, 0 )
visible = false

[node name="CollisionShape" type="CollisionShape" parent="floor"]
shape = SubResource( 17 )

[node name="mesh" type="MeshInstance" parent="floor"]
mesh = SubResource( 18 )
material/0 = null

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 20 )

[node name="Vira" type="KinematicBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 28.1913, 0, -7.85858 )
collision_layer = 15
collision_mask = 15
script = SubResource( 21 )
__meta__ = {
"_editor_description_": "Astral-Project: T
Stop Astral-Project: F
Teleport: V (toggle \"Teleport_Target\" node visible first; can be used while astral projecting)

Auto_Gravitational_Orientation_Ready 
{
when in a gravity field just pass the gravity vector (which way is down) to \"Vira.g\"
and set parts of the planet to have their collision layer set as the ff:
bit 2 # make surface normal usable (used to reorient Vira)
bit 3 # make surface normal not usable (notify CompositePlanet Node to auto set planet part)
bit 4 # surface is selectable for body reorientation (walk on wall regardless of overall planetary gravity)

for walkable surface:
2 true
3 false
4 true

for slopes:
2 false
3 true
4 false

for non-climbable but walkable surface:
2 true
3 false
4 false
}
Reorient To World Axis: R
"
}

[node name="MeshInstance" type="MeshInstance" parent="Vira"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, -1.47527, 1.66533e-15 )
mesh = SubResource( 22 )
material/0 = SubResource( 23 )

[node name="CollisionShape" type="CollisionShape" parent="Vira"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, -1.48988, -4.21885e-15 )
shape = SubResource( 24 )

[node name="Head" type="KinematicBody" parent="Vira"]
collision_layer = 262144
collision_mask = 262144

[node name="RayCast2" type="RayCast" parent="Vira/Head"]
transform = Transform( 1, 0, 0, 0, 0.996194, -0.0871557, 0, 0.0871557, 0.996194, 0, 1.5, -0.9 )
enabled = true
cast_to = Vector3( 0, -6, 0 )
collision_mask = 16

[node name="CollisionShape" type="CollisionShape" parent="Vira/Head"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -10 )
visible = false
shape = SubResource( 25 )

[node name="PCamera" type="Camera" parent="Vira/Head"]
cull_mask = 3
fov = 90.0
far = 1e+06
script = ExtResource( 1 )

[node name="P" type="Position3D" parent="Vira/Head/PCamera"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -10 )

[node name="Teleport_Target" type="MeshInstance" parent="Vira/Head/PCamera/P"]
mesh = SubResource( 26 )
material/0 = null

[node name="V2" type="Label" parent="Vira/Head/PCamera"]
margin_right = 130.0
margin_bottom = 45.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="screen2" type="MeshInstance" parent="Vira/Head/PCamera" groups=[
"SCREENS",
]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -4.76837e-07, -2.36867 )
mesh = SubResource( 27 )
material/0 = SubResource( 28 )
script = ExtResource( 5 )

[node name="RayCast" type="RayCast" parent="Vira"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.5, 0 )
visible = false
enabled = true
cast_to = Vector3( 0, -20, 0 )
collision_mask = 524295

[node name="CENTER" type="Area" parent="Vira"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.5, 0 )
collision_layer = 524288
collision_mask = 524288

[node name="CollisionShape" type="CollisionShape" parent="Vira/CENTER"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, 1, 0, -1, -1.62921e-07, 0, 0, 0 )
shape = SubResource( 29 )

[node name="a" type="RayCast" parent="Vira/CENTER/CollisionShape"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, -1.64877e-09, 0.01012 )
cast_to = Vector3( 0, 0, 100000 )
collision_mask = 524288

[node name="b" type="RayCast" parent="Vira/CENTER/CollisionShape"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, -1.64877e-09, 0.01012 )
cast_to = Vector3( 0, 0, -100000 )
collision_mask = 524288

[node name="c" type="RayCast" parent="Vira/CENTER/CollisionShape"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, -1.64877e-09, 0.01012 )
cast_to = Vector3( 100000, 0, 0 )
collision_mask = 524288

[node name="d" type="RayCast" parent="Vira/CENTER/CollisionShape"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, -1.64877e-09, 0.01012 )
cast_to = Vector3( -10000, 0, 0 )
collision_mask = 524288

[node name="e" type="RayCast" parent="Vira/CENTER/CollisionShape"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, -1.64877e-09, 0.01012 )
cast_to = Vector3( 0, 10000, 0 )
collision_mask = 524288

[node name="f" type="RayCast" parent="Vira/CENTER/CollisionShape"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, -1.64877e-09, 0.01012 )
cast_to = Vector3( 0, -10000, 0 )
collision_mask = 524288

[node name="On_ground" type="RayCast" parent="Vira"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -3, 0 )
enabled = true
cast_to = Vector3( 0, -2, 0 )

[node name="V" type="Label" parent="Vira"]
margin_left = 1.85921
margin_top = 69.7203
margin_right = 131.859
margin_bottom = 114.72
__meta__ = {
"_edit_use_anchors_": false
}

[node name="p1" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 19.3683, 11.446, -15.9725 )
visible = false
mesh = SubResource( 30 )
material/0 = null
script = ExtResource( 3 )

[node name="PortalA1" type="MeshInstance" parent="."]
transform = Transform( -4.37114e-08, 1, -4.37114e-08, 0, -4.37114e-08, -1, -1, -4.37114e-08, 1.91069e-15, -24.6892, 5, -12.6 )
visible = false
mesh = SubResource( 32 )
material/0 = null
script = ExtResource( 15 )

[node name="Portal2B" type="MeshInstance" parent="PortalA1"]
transform = Transform( -1, 8.74228e-08, 0, -8.74228e-08, -1, -8.35187e-23, 0, -8.35188e-23, 1, 0, 0, 0 )
mesh = SubResource( 34 )
material/0 = null
script = ExtResource( 21 )

[node name="PortalB1" type="MeshInstance" parent="."]
transform = Transform( -4.37114e-08, -1, 4.37114e-08, 0, -4.37114e-08, -1, 1, -4.37114e-08, 1.91069e-15, -24.6892, 5, 51.071 )
visible = false
mesh = SubResource( 36 )
material/0 = null
script = ExtResource( 18 )

[node name="Portal2A" type="MeshInstance" parent="PortalB1"]
transform = Transform( -1, 7.45058e-08, -3.55271e-15, -7.45058e-08, -1, 0, 0, -8.88178e-16, 1, 0, 0, 0 )
mesh = SubResource( 38 )
material/0 = null
script = ExtResource( 22 )

[node name="Green_Hovering" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 44.2945, 14.751, -19.4906 )
script = ExtResource( 8 )

[node name="CollisionShape" type="CollisionShape" parent="Green_Hovering"]
shape = SubResource( 39 )

[node name="mesh" type="MeshInstance" parent="Green_Hovering"]
visible = false
mesh = SubResource( 40 )
material/0 = null

[node name="purple flat" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 80, 8, 0 )
script = ExtResource( 12 )

[node name="CollisionShape" type="CollisionShape" parent="purple flat"]
shape = SubResource( 9 )

[node name="mesh" type="MeshInstance" parent="purple flat"]
visible = false
mesh = SubResource( 41 )
material/0 = null

[node name="emissive" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 55, 8, 0 )
script = ExtResource( 16 )

[node name="CollisionShape" type="CollisionShape" parent="emissive"]
shape = SubResource( 42 )

[node name="mesh" type="MeshInstance" parent="emissive"]
visible = false
mesh = SubResource( 43 )
material/0 = null

[node name="PortalA3" type="MeshInstance" parent="."]
transform = Transform( 0.866025, -0.5, 2.18557e-08, 0, -4.37114e-08, -1, 0.5, 0.866025, -3.78552e-08, 80, 5, -18 )
visible = false
mesh = SubResource( 45 )
material/0 = null
script = ExtResource( 25 )

[node name="Portal4B" type="MeshInstance" parent="PortalA3"]
transform = Transform( -1, 8.74228e-08, 0, -8.74228e-08, -1, 0, 0, 0, 1, 0, 0, 0 )
mesh = SubResource( 47 )
material/0 = null
script = ExtResource( 26 )

[node name="PortalB3" type="MeshInstance" parent="."]
transform = Transform( 0.866025, 0.5, -2.18557e-08, 0, -4.37114e-08, -1, -0.5, 0.866025, -3.78552e-08, 80, 5, 18 )
visible = false
mesh = SubResource( 49 )
material/0 = null
script = ExtResource( 23 )

[node name="Portal4A" type="MeshInstance" parent="PortalB3"]
transform = Transform( -1, 8.74228e-08, 0, -8.74228e-08, -1, 0, 0, 0, 1, 0, 0, 0 )
mesh = SubResource( 51 )
material/0 = null
script = ExtResource( 24 )

[node name="PortalA7" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 70, 0, 59.549 )
visible = false
mesh = SubResource( 53 )
material/0 = null
script = ExtResource( 27 )

[node name="Portal8B" type="MeshInstance" parent="PortalA7"]
transform = Transform( -1, 8.74228e-08, 0, -8.74228e-08, -1, 0, 0, 0, 1, 0, 0, 0 )
mesh = SubResource( 55 )
material/0 = null
script = ExtResource( 29 )

[node name="PortalB7" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 70, 0, 92.93 )
visible = false
mesh = SubResource( 57 )
material/0 = null
script = ExtResource( 28 )

[node name="Portal8A" type="MeshInstance" parent="PortalB7"]
transform = Transform( -1, 8.74228e-08, 0, -8.74228e-08, -1, 0, 0, 0, 1, 0, 0, 0 )
mesh = SubResource( 59 )
material/0 = null
script = ExtResource( 30 )

[connection signal="body_entered" from="Vira/CENTER" to="Vira" method="_on_CENTER_body_entered"]
[connection signal="body_exited" from="Vira/CENTER" to="Vira" method="_on_CENTER_body_exited"]
